---
- name: Build and set up VPN client with strongSwan from source
  hosts: zabbix_agents
  become: true
  vars_files:
    - ./../zabbix-agent.ini
  vars:
    strongswan_repo: "https://github.com/strongswan/strongswan.git"
    build_dir: "/home/gnet/strongswan"
    install_prefix: "/usr/"
    IPSEC_VER: 6.0.0
    configure_options: "--prefix=/usr --sysconfdir=/etc --libexecdir=/usr/libexec --with-systemdsystemunitdir=/usr/lib/systemd/system --enable-stroke"
  tasks:
    - name: Ensure required packages for build are installed
      apt:
        name:
          - git
          - gcc
          - make
          - libgmp-dev
          - libssl-dev
          - automake
          - libtool
          - dpkg-dev
          - fakeroot
          - build-essential
          - autoconf
          - pkg-config
          - gettext
          - perl
          - flex
          - yacc
          - bison
          - gperf
          - libcap-ng-dev
          - git
          - clang 
          - automake
          - python3
          - curl 
          - debhelper 
          - libcrypto++-dev
          - libcurl4
          - libcurl4-openssl-dev
          - libgcrypt20-dev
          - libssl3
          - libsystemd-dev
          - openssl
          - mc
          - iproute2
          - net-tools
          - iputils-ping
        state: present
        update_cache: yes

    - name: create a directory
      ansible.builtin.file:
        path: "{{ build_dir }}"
        state: directory
    
    - name: Download StrongSwan source package
      get_url:
        url: "https://download.strongswan.org/strongswan-{{ IPSEC_VER }}.tar.bz2"
        dest: "{{ build_dir }}-{{ IPSEC_VER }}.tar.bz2"

    - name: Extract StrongSwan source package
      unarchive:
        src: "{{  build_dir }}-{{ IPSEC_VER }}.tar.bz2"
        dest: "{{ build_dir }}"
        remote_src: yes


#    - name: Clone strongSwan repository
#      git:
#        repo: "{{ strongswan_repo }}"
#        dest: "{{ build_dir }}"
#        force: yes
#      ignore_errors: yes

#    - name: Run autogen.sh to generate configure script
#      command: ./autogen.sh
#      args:
#        chdir: "{{ build_dir }}"

    - name: Configure strongSwan build
      command: |
        ./configure {{ configure_options }}
      args:
        chdir: "/home/gnet/strongswan/strongswan-6.0.0"

    - name: Build strongSwan
      command: make
      args:
        chdir: "/home/gnet/strongswan/strongswan-6.0.0"

    - name: Build strongSwan
      command: sudo make install
      args:
        chdir: "/home/gnet/strongswan/strongswan-6.0.0"



    - name: Get MAC address of the client
      shell: ip link show {{ net_interface }} | awk '/ether/ {print $2}'
      register: client_mac_address



    - name: Create ipsec.conf for client
      copy:
        dest: /etc/ipsec.conf
        content: |
          config setup
            charondebug="ike 0, knl 0, cfg 2"

          conn myvpn
            ike=aes256-sha256-modp3072,aes128-sha256-ecp256
            esp=aes256-sha256,aes128-sha256
            keyexchange=ikev2
            leftsourceip=%config
            left=%any
            leftid=client-{{ client_mac_address.stdout_lines | join('') | regex_replace(':', '-') }}
            leftauth=psk
            right={{ server_ip }}
            rightid={{ server_ip }}
            rightauth=psk
            rightsubnet=172.16.16.0/22
            dpdaction=restart
            dpddelay=15s
            dpdtimeout=60s
            auto=start

    - name: Create ipsec.secrets file
      copy:
        dest: /etc/ipsec.secrets
        content: |
          : PSK "{{ psk_key }}"
        mode: '0600'

    - name: Add route to the server
      command: ip route add {{ server_ip }}/32 via {{ net_interface }}
      ignore_errors: yes

    - name: Run ipsec start
      command: ipsec restart
      become: true
      tags: ipsec_start
      ignore_errors: yes
      

    #- name: Restart strongSwan service
    #  service:
    #    name: ipsec
    #    state: restarted
    #    enabled: yes
